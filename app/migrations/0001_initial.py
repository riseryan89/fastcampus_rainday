# Generated by Django 4.1.6 on 2023-02-06 13:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StationLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "station_name",
                    models.CharField(help_text="종관기상관측 센터 지역이름", max_length=128),
                ),
                (
                    "kma_station_code",
                    models.CharField(help_text="종관기상관측 센터 코드", max_length=8),
                ),
                (
                    "station_authority",
                    models.CharField(help_text="종관기상관측 센터 관할지역", max_length=128),
                ),
                (
                    "province",
                    models.CharField(
                        choices=[
                            ("SEOUL", "서울"),
                            ("GG", "경기도"),
                            ("INCHOEN", "인천"),
                            ("JEJU", "제주"),
                            ("GW", "강원도"),
                            ("CB", "충북"),
                            ("CN", "충남"),
                            ("GB", "경북"),
                            ("GN", "경남"),
                            ("JB", "전북"),
                            ("JN", "전남"),
                            ("DAEGU", "대구"),
                            ("DAESAN", "대전"),
                            ("BUSAN", "부산"),
                            ("ULSAN", "울산"),
                            ("SEJONG", "세종"),
                        ],
                        help_text="종관기상관측 센터 관할지역",
                        max_length=8,
                    ),
                ),
                (
                    "late_models_changed_at",
                    models.DateTimeField(
                        blank=True, help_text="최근 예측모델 변경 시간", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "StationLocations",
            },
        ),
        migrations.CreateModel(
            name="WeatherPredictModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("model_file_name", models.CharField(max_length=128)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="weather_predict_model",
                        to="app.stationlocation",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Weather",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("min_temp", models.CharField(max_length=6)),
                ("max_temp", models.CharField(max_length=6)),
                ("total_rain", models.CharField(max_length=6)),
                ("avg_humidity", models.CharField(max_length=6)),
                ("wind_speed", models.CharField(max_length=6)),
                ("wind_direction", models.CharField(max_length=6)),
                ("avg_pa", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weather_location",
                        to="app.stationlocation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("success", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Email History",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="locations",
            field=models.ManyToManyField(
                related_name="user_location", to="app.stationlocation"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="weatherpredictmodel",
            index=models.Index(
                fields=["location", "created_at"], name="ix_predict_loc_created_at"
            ),
        ),
        migrations.AddIndex(
            model_name="weather",
            index=models.Index(
                fields=["location", "date"], name="ix_weather_location_date_time"
            ),
        ),
    ]
